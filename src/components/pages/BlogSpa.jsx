import React from 'react'
import "../styles/BlogSpa.css";
import { Link } from 'react-router-dom';
export default function BlogSpa() {
  return (
    <div>
      <div className='container-fluid m'>
        <div className='row'>
          <div className='col-sm-1'></div>
          <div className='col-sm-10 py-5'>
         <div className='row '>
          <div className='col-sm-12 stop'>
          <p>Home >> Blog >> <i>SAP - An Overview and Introduction</i></p>
          </div>
         </div>
         <div className='row '>
          <div className='col-sm-12 stop1 py-3'>
           <div className='stop2 p-3'>
            <center><h4 style={{fontFamily:'sans-serif'}}>SAP - AN OVERVIEW AND INTRODUCTION</h4></center>
            <hr/>
     <b>What is SAP?</b><br/><br/>
     <span>
     SAP stands for Systems Applications and Products in Data Processing. SAP, by definition, is also the name of the ERP (Enterprise Resource Planning) 
     software as well as the name of the company. SAP Software is a European multinational, founded in 1972 by Wellenreuther, Hopp, Hector, Plattner, and Tschira. They develop 
     software solutions for managing business operations and customer relationships.<br/><br/>
     SAP system consists of a number of fully integrated modules, which covers virtually every aspect of business management.<br/><br/>
     SAP is #1 in the ERP market. As of 2010, SAP has more than 140,000 installations worldwide, over 25 industry-specific business solutions and more than 75,000 customers in 120 countriesS<br/><br/>
     Other Competitive products of SAP Software in the market are Oracle, Microsoft Dynamics, etc<br/><br/>
<b>What is SAP ERP? Why is it Required?</b><br/><br/>
Suppose a client approaches a sales team asking for a particular product. The sales team contacts the inventory department to check the availability of the product. To their surprise, the sales team found out that the product is out of stock. So next time this doesn’t
 happen, they have to introduce an SAP ERP tool.<br/><br/><br/>
 Here is the whole process that is followed by any business unit:
 Before we actually see in detail, what ERP is and how ERP can help in your business process, we will understand how different departments are involved in the whole business process, right from the ordering of the raw material – to manufacturing goods – to delivering final products to the customer.<br/><br/>

1.   Client contacts the sales team to check the availability of the product.<br/>
2.   Sales team approaches the Inventory department to check for the availability of the product.<br/>
3.   In case the product is out of stock, the sales team approaches the Production Planning Department to manufacture the product.<br/>
4.   The production planning team checks with inventory department for availability of raw material.<br/>
5.   If the raw material is not available with inventory, the Production Planning team buys the raw material from the Vendors.<br/>
6.   Then Production Planning forwards the raw materials to the Shop Floor Execution for actual production.<br/>
7.   Once ready, the Shop Floor Team sends the goods to the Sales Team.<br/>
8.  Sales Team who in turn deliver it to the client.<br/>
9.   The sales team updates the finance with revenue generated by the sale of the product. Production planning team update the finance with payments to be  vendors for raw materials.<br/>
10.  All departments approach the HR for any Human Resource related issue.<br/><br/>



<b>Decentralized System:</b><br/><br/>

Let’s look at Decentralized system first, in a company with Decentralized System of Data Management. There are two major problems:<br/><br/>

Data is maintained locally at the individual departments<br/>
Departments do not have access to information or data from other departments<br/><br/>
To identify issues arising due to decentralized Enterprise management system lets look at the same business process again. The customer approaches the sales team for a product, but this time around, he needs the product, on an urgent basis.<br/><br/>

Since it is a decentralized process, the Sales Team do not have any real-time information access to the productavailability. So they approach the Inventory department to check the availability of the product. This process takes time, and the customer chooses another vendor leading to loss of revenue and customer dissatisfaction.<br/><br/>

Now, suppose the product is out of stock, and the Sales Team approaches the Production Planning team to manufacture the product for future use. Production Planning Team checks the availability of the raw materials required.<br/><br/>

In a decentralized system, raw material information is stored separately by Production Planning as well as the Inventory Department. Thus, data maintenance cost (in this case, Raw Material) goes up.<br/><br/>

The raw material information is available in two different departments Inventory as well as Production Planning. When sales team check a particular raw material required to manufacture the product, it shows the raw material is available as per the inventory, but as per the database of the production planning team, the raw material is out of stock.

So, they go ahead and buy the raw material. Thus, material, as well as inventory cost, goes up.<br/><br/>

Once the raw material is available, the shop floor department suddenly realizes they are short of workers. They approach the HR, who in turn hire temporary employees at higher than market rates. Thus LABOR Cost Increases.<br/><br/>

The production planning department fails to update the finance department on the materials they have purchased. The finance department defaults the payment deadline set by the vendor causing the company loss of its reputation and even inviting a possible legal action.

These are just a few of many problems with decentralized systems.

<b style={{color:'blue'}}>JEP 409:</b> Sealed Classes<br/><br/>
Sealed Classes allow API designers to specify which classes or interfaces may extend or implement a given class. Having an 
exhaustive list of cases to consider when modeling a problem can simplify development. JEP 409 was developed in the  <b style={{color:'blue'}}>OpenJDK Project Amber,</b> 
which aims to continually improve developer productivity through evolution of the Java programming language.<br/><br/>
<b>2. Updates and Improvements on Core Libraries</b><br/><br/>
<b style={{color:'blue'}}>JEP 306</b>: Restore Always-Strict Floating-Point Semantics<br/><br/>
The Java programming language and Java virtual machine originally only had strict floating-point semantics. Starting in JDK 1.2, small variances in those strict semantics 
were allowed by default to accommodate limitations of then-current hardware architectures. Those variances are no longer helpful or necessary and have been removed by JEP 306<br/><br/>.
<b style={{color:'blue'}}>JEP 356: </b>Enhanced Pseudo-Random Number Generator<br/><br/>
Updates to java.util.random improve the interoperability of different PRNGs (Pseudo-Random Number Generators) and make it easy to request an algorithm based on 
requirements rather than hard coding a specific implementation.  Changes include new interface types and implementations for pseudorandom number generators (PRNGs),
 including jumpable PRNGs and an additional class of splitable PRNG algorithms (LXM) and a new RandomGeneratorFactory class.<br/><br/>
 <b style={{color:'blue'}}>JEP 382</b>: New macOS Rendering Pipeline<br/><br/>
This new pipeline reduces the JDK’s dependency on the deprecated Apple OpenGL API by implementing a Java 2D rendering pipeline for macOS using the new Apple Metal API.<br/><br/>
<b style={{color:'blue'}}>JEP 415</b> Context-Specific Deserialization Filters<br/><br/>
Filter Incoming Serialization Data, added with JDK 9 (JEP 290), is improved by allowing applications to configure context-specific and dynamically-selected deserialization
 filters via a JVM-wide filter factory that is invoked to select a filter for each individual deserialization operation. This makes it possible to take advantage of deserialization
  filters without requiring every stream’s creator to update their code or making the filter too restrictive or too permissive<br/><br/>
     </span><br/><br/><br/>
     <div className='row n '>
            <div className='col-sm-4'><b>Posted in:</b> <Link to="/spa">SPA</Link></div>
            <div className='col-sm-4'><b>By:</b> Ashish Arora</div>
            <div className='col-sm-4'><b>Posted on:</b> Oct 06, 2021</div>
         </div><br/><br/>
         </div>
          </div>
         </div>
          </div>
          <div className='col-sm-1'></div>
        </div>
      </div>
    </div>
  )
}